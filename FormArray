html file:

<form [formGroup]="myForm" (ngSubmit)="onSubmit()">
    <div>
        <label for="surname">Surname</label>
        <input id="surname" formControlName="surname">
    </div>
    <div formArrayName="items">
      <div *ngFor="let item of items.controls; let i = index" [formGroupName]="i">
        <label for="name">Name</label>
        <input id="name" formControlName="name">
        <div *ngIf="item.get('name')?.invalid && item.get('name')?.touched">
          Name is required
        </div>
  
        <label for="quantity">Quantity</label>
        <input id="quantity" formControlName="quantity" type="number">
        <div *ngIf="item.get('quantity')?.invalid && item.get('quantity')?.touched">
          Quantity must be at least 1
        </div>
  
        <button type="button" (click)="removeItem(i)">Remove</button>
      </div>
    </div>
  
    <button type="button" (click)="addItem()">Add Item</button>
    <button type="submit">Submit</button>
  </form>
  

ts file:

import { Component, OnInit } from '@angular/core';
import { PracticeService } from '../Services/practice.service';
import { CommonModule } from '@angular/common';
import { FormArray, FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';

@Component({
  selector: 'app-practice-component',
  standalone: true,
  imports: [CommonModule, ReactiveFormsModule, ],
  templateUrl: './practice-component.component.html',
  styleUrl: './practice-component.component.css'
})
export class PracticeComponentComponent implements OnInit {
  myForm!: FormGroup;

  constructor(private fb: FormBuilder) { }

  ngOnInit(): void {
    this.myForm = this.fb.group({
      surname: ['', Validators.required],
      items: this.fb.array([])
    });
  }

  get items(): FormArray {
    return this.myForm.get('items') as FormArray;
  }

  addItem() {
    this.items.push(this.fb.group({
      name: ['', Validators.required],
      quantity: [1, [Validators.required, Validators.min(1)]]
    }));
  }

  removeItem(index: number) {
    this.items.removeAt(index);
  }

  onSubmit() {
    if (this.myForm.valid) {
      console.log(this.myForm.value.surname);
    } else {
      console.log('Form is invalid');
    }
  }
}
